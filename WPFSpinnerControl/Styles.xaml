<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WPFSpinnerControl"
                    xmlns:Converter="clr-namespace:WPFSpinnerControl.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <Converter:AddValueConverter x:Key="AddValue" />
    <Converter:MultiplyValueConverter x:Key="MultyplyValue" />
    <Converter:PointConverter x:Key="PointConverter" />
    <sys:Double x:Key="half">0.5</sys:Double>
    <sys:Double x:Key="ratio">0.1</sys:Double>

    <SolidColorBrush x:Key="Item.IsHighlighted" Color="#f5f5f5"/>
    <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#f7f7f8"/>
    <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#adadad"/>
    <SolidColorBrush x:Key="Item.IsPressed.Background" Color="#d8e1e8"/>
    <SolidColorBrush x:Key="Item.IsPressed.Border" Color="#adadad"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#e6e6e6"/>
    <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#8c8c8c"/>
    <SolidColorBrush x:Key="Item.Background" Color="#fff"/>
    <SolidColorBrush x:Key="Item.Border" Color="#ccc"/>
    <SolidColorBrush x:Key="Item.Text" Color="#262626"/>

    <Style TargetType="ProgressBar">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Canvas x:Name="canvas">
                        <Canvas.RenderTransform>
                            <RotateTransform x:Name="Transform" Angle="0">
                                <RotateTransform.CenterX>
                                    <MultiBinding Converter="{StaticResource MultyplyValue}">
                                        <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Source="{StaticResource half}"/>
                                    </MultiBinding>
                                </RotateTransform.CenterX>
                                <RotateTransform.CenterY>
                                    <MultiBinding Converter="{StaticResource MultyplyValue}">
                                        <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Source="{StaticResource half}"/>
                                    </MultiBinding>
                                </RotateTransform.CenterY>
                            </RotateTransform>
                        </Canvas.RenderTransform>
                        <Canvas.Triggers>
                            <EventTrigger RoutedEvent="Canvas.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="(Canvas.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1" RepeatBehavior="Forever" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Canvas.Triggers>
                        <Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Stroke="#666e78" Opacity="0.4">
                            <Ellipse.StrokeThickness>
                                <MultiBinding Converter="{StaticResource MultyplyValue}">
                                    <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="{StaticResource ratio}"/>
                                </MultiBinding>
                            </Ellipse.StrokeThickness>
                        </Ellipse>
                        <Path Stroke="#0079c0">
                            <Path.StrokeThickness>
                                <MultiBinding Converter="{StaticResource MultyplyValue}">
                                    <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Source="{StaticResource ratio}"/>
                                </MultiBinding>
                            </Path.StrokeThickness>
                            <Path.Data>
                                <PathGeometry>
                                    <PathGeometry.Figures>
                                        <PathFigureCollection>
                                            <PathFigure>
                                                <PathFigure.StartPoint>
                                                    <MultiBinding Converter="{StaticResource PointConverter}">
                                                        <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                        <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                        <Binding Source="{StaticResource ratio}"/>
                                                        <Binding Source="StartPoint"/>
                                                    </MultiBinding>
                                                </PathFigure.StartPoint>
                                                <PathFigure.Segments>
                                                    <PathSegmentCollection>
                                                        <ArcSegment RotationAngle="0" IsLargeArc="False" SweepDirection="Clockwise">
                                                            <ArcSegment.Point>
                                                                <MultiBinding Converter="{StaticResource PointConverter}">
                                                                    <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    <Binding Source="{StaticResource ratio}"/>
                                                                    <Binding Source="Point"/>
                                                                </MultiBinding>
                                                            </ArcSegment.Point>
                                                            <ArcSegment.Size>
                                                                <MultiBinding Converter="{StaticResource PointConverter}">
                                                                    <Binding Path="Width" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    <Binding Path="Height" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                                    <Binding Source="{StaticResource ratio}"/>
                                                                    <Binding Source="Size"/>
                                                                </MultiBinding>
                                                            </ArcSegment.Size>
                                                        </ArcSegment>
                                                    </PathSegmentCollection>
                                                </PathFigure.Segments>
                                            </PathFigure>
                                        </PathFigureCollection>
                                    </PathGeometry.Figures>
                                </PathGeometry>
                            </Path.Data>
                        </Path>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="CommentTextBox" TargetType="{x:Type TextBox}">
        <Border Background="{TemplateBinding Background}"  x:Name="border"
                BorderBrush="#ccc" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="0,4,4,0">
            <ScrollViewer x:Name="PART_ContentHost"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="#66afe9"/>
                <Setter Property="Effect" TargetName="border">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.6" Color="#66afe9" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Width" Value="Auto">
                <Setter Property="MinWidth" Value="100"/>
            </Trigger>
            <Trigger Property="Height" Value="Auto">
                <Setter Property="MinHeight" Value="20"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- the label icon -->
    <ControlTemplate x:Key="LabelIcon">
        <Canvas Width="12" Height="12">
            <Path Fill="{TemplateBinding Foreground}" Data="M11.775 6.225l-6-6A.68.68 0 0 0 5.25 0H.75C.3 0 0 .3 0 .75v4.5a.68.68 0 0 0 .225.525l6 6c.15.15.3.225.525.225a.68.68 0 0 0 .525-.225l4.5-4.5c.3-.3.3-.75 0-1.05zM3 3.75c-.45 0-.75-.3-.75-.75s.3-.75.75-.75.75.3.75.75-.3.75-.75.75z"/>
        </Canvas>
    </ControlTemplate>
    
    <Style x:Key="LabelTextBox" TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid VerticalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <ContentControl Grid.Column="0" Template="{StaticResource LabelIcon}" SnapsToDevicePixels="True" />
                        <ScrollViewer Grid.Column="1" x:Name="PART_ContentHost"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CommentButton" >
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="MinHeight" Value="35"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid x:Name="grid">
                        <Border x:Name="border" CornerRadius="4,0,0,4" BorderBrush="{StaticResource Item.Border}" BorderThickness="1">
                            <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center" Margin="10,5,10,5">
                            </ContentPresenter>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsFocused" Value="true">
                            <Setter Property="BorderBrush" TargetName="border" Value="#66afe9"/>
                            <Setter Property="Effect" TargetName="border">
                                <Setter.Value>
                                    <DropShadowEffect ShadowDepth="0" BlurRadius="8" Opacity="0.6" Color="#66afe9" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>-->
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="grid" Value="{StaticResource Item.IsPressed.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Item.IsPressed.Border}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="grid" Value="{StaticResource Item.MouseOver.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Item.MouseOver.Border}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="grid" Value="{StaticResource Item.SelectedActive.Background}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Item.SelectedActive.Border}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBoxWithPlaceholder">
        <Style.Resources>
            <VisualBrush x:Key="CueBannerBrush" AlignmentX="Left" AlignmentY="Top" Stretch="None">
                <VisualBrush.Visual>
                    <Label Content="Write a comment" Foreground="LightGray" />
                </VisualBrush.Visual>
            </VisualBrush>
        </Style.Resources>
        <Style.Triggers>
            <Trigger Property="Text" Value="{x:Static sys:String.Empty}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="Text" Value="{x:Null}">
                <Setter Property="Background" Value="{StaticResource CueBannerBrush}" />
            </Trigger>
            <Trigger Property="IsKeyboardFocused" Value="True">
                <Setter Property="Background" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>